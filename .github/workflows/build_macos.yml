name: Build macOS Application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Verify icon file
      run: |
        if [ ! -f "bbdown_icon.icns" ]; then
          echo "❌ 错误：预生成的图标文件 bbdown_icon.icns 不存在"
          echo "请确保图标文件已正确生成并提交到仓库"
          exit 1
        fi
        echo "✅ 图标文件验证通过"
        
    - name: Build with PyInstaller
      run: |
        echo "🔨 开始构建 macOS 应用程序..."
        
        # 使用 PyInstaller 直接构建 .app 包
         pyinstaller --clean --noconfirm \
           --windowed \
           --name "BBDown GUI" \
           --icon bbdown_icon.icns \
           --osx-bundle-identifier com.bbdown.gui \
           --add-data "bbdown_icon.icns:." \
           bbdown_gui.py
        
        echo "✅ PyInstaller 构建完成"
        
    - name: Customize app bundle
      run: |
        APP_NAME="BBDown GUI.app"
        DIST_APP="dist/$APP_NAME"
        
        if [ ! -d "$DIST_APP" ]; then
          echo "❌ 错误：构建的应用程序包不存在: $DIST_APP"
          exit 1
        fi
        
        echo "🔧 自定义应用程序包..."
        
        # 更新 Info.plist 添加更多元数据
         /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $(date +%Y%m%d%H%M)" "$DIST_APP/Contents/Info.plist" 2>/dev/null || /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $(date +%Y%m%d%H%M)" "$DIST_APP/Contents/Info.plist"
         /usr/libexec/PlistBuddy -c "Add :CFBundleShortVersionString string 1.0" "$DIST_APP/Contents/Info.plist" 2>/dev/null || /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString 1.0" "$DIST_APP/Contents/Info.plist"
         /usr/libexec/PlistBuddy -c "Add :LSMinimumSystemVersion string 10.15" "$DIST_APP/Contents/Info.plist" 2>/dev/null || /usr/libexec/PlistBuddy -c "Set :LSMinimumSystemVersion 10.15" "$DIST_APP/Contents/Info.plist"
         /usr/libexec/PlistBuddy -c "Add :NSHighResolutionCapable bool true" "$DIST_APP/Contents/Info.plist" 2>/dev/null || /usr/libexec/PlistBuddy -c "Set :NSHighResolutionCapable true" "$DIST_APP/Contents/Info.plist"
         /usr/libexec/PlistBuddy -c "Add :NSSupportsAutomaticGraphicsSwitching bool true" "$DIST_APP/Contents/Info.plist" 2>/dev/null || /usr/libexec/PlistBuddy -c "Set :NSSupportsAutomaticGraphicsSwitching true" "$DIST_APP/Contents/Info.plist"
        
        # 确保图标文件在正确位置
        cp bbdown_icon.icns "$DIST_APP/Contents/Resources/"
        
        # 设置正确的权限
        chmod -R 755 "$DIST_APP"
        chmod +x "$DIST_APP/Contents/MacOS/BBDown GUI"
        
        # 清理扩展属性
        xattr -cr "$DIST_APP"
        
        echo "✅ 应用程序包自定义完成"
        
    - name: Create distribution package
      run: |
        APP_NAME="BBDown GUI.app"
        DIST_APP="dist/$APP_NAME"
        
        echo "📦 创建分发包..."
        
        # 创建输出目录
        mkdir -p artifact
        
        # 使用 ditto 创建压缩包，保持 macOS 元数据
        ditto -c -k --keepParent "$DIST_APP" "artifact/BBDown_GUI_Mac.zip"
        
        # 显示包信息
        echo "📊 应用程序包信息："
        ls -la "$DIST_APP"
        echo "📊 压缩包大小："
        ls -lh artifact/BBDown_GUI_Mac.zip
        
        echo "✅ 分发包创建完成"
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: BBDown_GUI_Mac_${{ github.run_number }}
        path: artifact/BBDown_GUI_Mac.zip
        retention-days: 30
        
    - name: Build summary
      run: |
        echo "🎉 macOS 构建完成！"
        echo "📱 应用程序名称: BBDown GUI"
        echo "🏗️ 构建编号: ${{ github.run_number }}"
        echo "📦 输出文件: BBDown_GUI_Mac.zip"
        echo "💾 文件大小: $(ls -lh artifact/BBDown_GUI_Mac.zip | awk '{print $5}')"
        echo "🔗 下载链接将在 Actions 页面的 Artifacts 部分提供"
